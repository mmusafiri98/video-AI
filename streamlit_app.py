import streamlit as st
from gradio_client import Client

# Connexion au Space Hugging Face
client = Client("ovi054/Qwen-Image-LORA")

st.set_page_config(page_title="Qwen Image Generator", layout="centered")

st.title("üé® Qwen Image Generator (LORA)")
st.write("G√©n√®re des images √† partir de texte avec le mod√®le **Qwen-Image-LORA** h√©berg√© sur Hugging Face.")

# Prompt utilisateur
prompt = st.text_area("üìù D√©cris l'image que tu veux g√©n√©rer :", 
                      placeholder="Exemple : Un chat qui joue de la guitare dans l'espace...")

# Param√®tres de g√©n√©ration
col1, col2 = st.columns(2)
with col1:
    width = st.selectbox("üìè Largeur", [512, 768, 1024], index=2)
    guidance_scale = st.slider("üéØ Guidance Scale", 1.0, 20.0, 4.0)
with col2:
    height = st.selectbox("üìê Hauteur", [512, 768, 1024], index=2)
    steps = st.slider("üîÑ Steps d'inf√©rence", 10, 50, 28)

# Seed (al√©atoire ou fixe)
randomize_seed = st.checkbox("üé≤ Random Seed", value=True)
seed = -1 if randomize_seed else st.number_input("Seed fixe :", value=42, step=1)

# Bouton pour lancer la g√©n√©ration
if st.button("üöÄ G√©n√©rer l'image") and prompt.strip():
    with st.spinner("‚è≥ G√©n√©ration en cours..."):
        try:
            result = client.predict(
                prompt=prompt,
                seed=seed,
                randomize_seed=randomize_seed,
                width=width,
                height=height,
                guidance_scale=guidance_scale,
                num_inference_steps=steps,
                lora_id=None,
                lora_scale=1,
                api_name="/infer"
            )

            # R√©sultat = URL ou chemin vers l'image
            if isinstance(result, str):
                st.image(result, caption="üñºÔ∏è Image g√©n√©r√©e", use_column_width=True)
            elif isinstance(result, list) and len(result) > 0:
                st.image(result[0], caption="üñºÔ∏è Image g√©n√©r√©e", use_column_width=True)
            else:
                st.error("‚ùå R√©sultat inattendu du mod√®le")
                st.write(result)

        except Exception as e:
            st.error(f"Erreur lors de la g√©n√©ration : {e}")




